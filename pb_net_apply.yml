---
# ---------------------------------------------------------------------
# Play - Basic Config such as Hostname, Domain, SNMP, logging, NTP info
# ---------------------------------------------------------------------
- name: Configure Device Basic Information
  hosts: aln
  tags: basic_config
  gather_facts: no
  tasks:
  - name: Configure Hostname / Domain-name
    cisco.ios.ios_system:
      hostname: "{{ inventory_hostname }}"
      domain_name: "{{ domain_name }}"
      lookup_enabled: no
      name_servers: "{{ dns_servers }}"
    tags:
    - basic
    - dns
    notify: save_cfg

  - name: Configure NTP
    cisco.ios.ios_ntp:
      server: "{{ ntp_server }}"
      logging: true
      state: present
      key_id: "10"
      auth_key: 15435A030726242723273C21181319000A
      auth: true
    tags:
    - basic
    - ntp
    notify: save_cfg
  
  - name: Get Running Config
    cisco.ios.ios_command:
      commands:
      - sh run
    register: running_config
    tags:
    - basic
    - ntp
  
  - name: Get Current List if NTP Servers
    set_fact: ntp_servers_in_cfg="{{
      running_config.stdout[0] |
      regex_findall('^ntp server (\S+)', multiline=True) }}"
    tags:
    - basic
    - ntp
  
  - name: Remove Old NTP Servers
    cisco.ios.ios_config:
      lines:
      - "no ntp server {{ item }}"
    when: item != ntp_server
    loop: "{{ ntp_servers_in_cfg }}"
    tags:
    - basic
    - ntp
    notify: save_cfg

  handlers:
  - name: save_cfg
    ios_command:
      commands:
      - write mem
    when: not ansible_check_mode

# --------------------------------------------------------------------------
# Play - Change Switchports to Routed Ports Before Configuring L3 Interfaces
# --------------------------------------------------------------------------
- name: Change Switchports to Routed Ports Before Configuring L3 Interfaces
  hosts: aln_fab
  tags: routed_switchport
  gather_facts: no
  tasks:
  - name: Execute No Switchport Command on Switch Ports
    cisco.ios.ios_config:
      lines:
      - no switchport
      parents: "interface {{ item.name }}"
    loop: "{{ l3_interfaces[inventory_hostname] | selectattr('physical','equalto', true) }}"
    tags:
    - switchport
    notify: save_cfg

  handlers:
  - name: save_cfg
    ios_command:
      commands:
      - write mem
    when: not ansible_check_mode

# -----------------------------------------------------------------------
# Play - Configure Physical & Tunnel & Loopback Interfaces On All Devices
# -----------------------------------------------------------------------
- name: Configure Device Interfaces
  hosts: aln
  tags: l3_interface
  gather_facts: no
  tasks:
  - name: Configure Underlay Interfaces with Lower MTU
    cisco.ios.ios_interfaces:
      config:
      - name: "{{ item.name }}"
        mtu: "{{ underlay_mtu }}"
        description: "{{ item.description }}"
      state: merged
    tags:
    - underlay
    loop: "{{ 
      l3_interfaces[inventory_hostname] |
      selectattr('underlay', 'equalto', true) |
      list }}"
    notify: save_cfg

  - name: Configure Physical Interfaces
    cisco.ios.ios_interfaces:
      config:
      - name: "{{ item.name }}"
        mtu: "{{ phys_intf_mtu }}"
        description: "{{ item.description }}"
      state: merged
    tags:
    - interface
    - physical
    loop: "{{ 
      l3_interfaces[inventory_hostname] |
      selectattr('physical', 'equalto', true) |
      list }}"
    notify: save_cfg

  - name: Configure Tunnel & Loopback Interfaces
    cisco.ios.ios_interfaces:
      config:
      - name: "{{ item.name }}"
        description: "{{ item.description }}"
      state: merged
    tags:
    - tunnel
    - loopback
    loop: "{{
      l3_interfaces[inventory_hostname] |
      selectattr('physical', 'equalto', false) |
      list }}"
    notify: save_cfg

  - name: Create VRFs and Associate to Interfaces
    cisco.ios.ios_vrf:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      rd: "{{ item.rd }}"
      route_both: "{{ item.route_both }}"
      interfaces: "{{
        l3_interfaces[inventory_hostname] |
        selectattr('vrf', 'equalto', item.name ) |
        map(attribute='name') |
        list }}"
      state: present
    loop: "{{ vrfs }}"
    tags:
    - vrf
    notify: save_cfg

  - name: Assign IPv4 Address to Interfaces
    cisco.ios.ios_l3_interfaces:
      config: 
      - name: "{{ item.name }}"
        ipv4:
        - address: "{{ item.cidr | ipv4(item.host_ip_index) }}" 
    loop: "{{ l3_interfaces[inventory_hostname] }}"
    tags:
    - ip_address
    - interface
    notify: save_cfg

  - name: Interface Admin State
    cisco.ios.ios_interfaces:
      config:
      - name: "{{ item.name }}"
        enabled: "{{ item.enabled }}"
    loop: "{{ l3_interfaces[inventory_hostname] }}"
    tags:
    - admin_state
    notify: save_cfg

  handlers:
  - name: save_cfg
    ios_command:
      commands:
      - write mem
    when: not ansible_check_mode

# ----------------------------------------------------------------------------
# Play - Global and Interface OSPF Configuration for BGP Next-Hop Reachability
# ----------------------------------------------------------------------------
- name: Configure OSPFv3 on All Devices
  hosts: aln_wan:aln_core:aln_fab
  tags: ospf
  gather_facts: no
  tasks:
  - name: Global OSPF configuration
    cisco.ios.ios_ospfv2:
      config:
        processes:
        - process_id: "{{ item.ospf_process }}"
          router_id: "{{ 
            l3_interfaces[inventory_hostname] |
            selectattr('description', 'equalto', 'loopback') |
            selectattr('vrf', 'equalto', item.vrf) |
            map(attribute='cidr') | ipv4(item.host_ip_index) | ipaddr('address') | join('') }}"
          vrf: "{{ item.vrf }}"
          max_metric:
            router_lsa: true
            on_startup:
              time: 110
          areas:
          - area_id: '0'
            default_cost: 5
          network:
          - address: "{{ item.cidr | ipv4(item.host_ip_index) | ipaddr('address') }}" 
            wildcard_bits: 0.0.0.0
            area: '0'
          passive_interfaces:
            default: true
            interface:
              set_interface: false
              name:
              - "{{ item.name }}"
      state: merged
    loop: "{{
      l3_interfaces[inventory_hostname] |
      selectattr('ospf_active', 'equalto', true) |
      list }}"
    tags:
    - ospf_global
    notify: save_cfg

  - name: Inteface OSPF Configuration on Transits
    cisco.ios.ios_ospf_interfaces:
      config:
        - name: "{{ item.name }}"
          address_family:
            - afi: ipv4
              process:
                id: "{{ item.ospf_process }}"
                area_id: 0
              bfd: true
              cost:
                interface_cost: 5
              hello_interval: 1
              dead_interval:
                time: 5
              network:
                point_to_point: true
    loop: "{{
      l3_interfaces[inventory_hostname] |
      selectattr('ospf_active', 'equalto', true) |
      selectattr('physical', 'equalto', true) |
      list }}"
    tags:
    - ospf_phys_interface
    notify: save_cfg

  - name: Inteface OSPF Configuration on Loopbacks
    cisco.ios.ios_ospf_interfaces:
      config:
        - name: "{{ item.name }}"
          address_family:
            - afi: ipv4
              process:
                id: "{{ item.ospf_process }}"
                area_id: 0
              cost:
                interface_cost: 5
    loop: "{{ 
      l3_interfaces[inventory_hostname] |
      selectattr('ospf_active', 'equalto', true) |
      selectattr('physical', 'equalto', false) |
      list }}"
    tags:
    - ospf_loopback_interface
    notify: save_cfg

  handlers:
  - name: save_cfg
    ios_command:
      commands:
      - write mem
    when: not ansible_check_mode

# ------------------------
# Play - BGP Configuration
# ------------------------
- name: Configure iBGP on All Devices
  hosts: aln_wan:aln_core:aln_fab
  tags: bgp
  gather_facts: no
  tasks:
  - name: Configure iBGP neighbors
    cisco.ios.ios_bgp_global:
      config:
        as_number: "{{ bgp.local_asn }}"
        bgp:
          router_id:
            address: "{{ 
              l3_interfaces[inventory_hostname] |
              selectattr('description', 'equalto', 'loopback') |
              selectattr('vrf', 'equalto', item.vrf) |
              map(attribute='cidr') | ipv4(item.host_ip_index) | ipaddr('address') | join('') }}"
            vrf: true
        neighbor:
          - activate: true
            address: "{{ item.cidr | ipv4(not item.host_ip_index|bool) | ipaddr('address') }}" 
            remote_as: "{{ bgp.local_asn }}"
            route_reflector_client: "{{ item.bgp_route_reflect }}"
            next_hop_self:
              set: "{{ item.bgp_next_hop_self }}"
            log_neighbor_changes:
              set: "{{ bgp_log_neighbor_changes }}"
            password: "{{ bgp_neighbor_pwd }}"
            send_community:
              set: true
            shutdown:
              set: "{{ not item.bgp_enabled|bool }}"
        redistribute:
          - connected:
              route_map: "CONN_BGP_{{ item.vrf }}"
          - static:
              route_map: "STATIC_BGP_{{ item.vrf }}"
        timers:
          keepalive: "{{ bgp_keepalive_interval }}"
          holdtime: "{{ bgp_holdtime }}"
      state: merged
    loop: "{{
      l3_interfaces[inventory_hostname] |
      selectattr('bgp', 'equalto', true) |
      selectattr('bgp_type', 'equalto', 'internal') |
      list }}"
    tags:
    - ibgp
    notify: save_cfg

  handlers:
  - name: save_cfg
    ios_command:
      commands:
      - write mem
    when: not ansible_check_mode